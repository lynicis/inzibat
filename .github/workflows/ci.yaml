name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    types: [ opened ]
  workflow_dispatch:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-go@v4
        with:
          go-version: 1.21

      - uses: golangci/golangci-lint-action@v3
        with:
          version: latest

  build:
    needs: [ lint ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-go@v4
        with:
          go-version: 1.21

      - run: CGO_ENABLED=0 GOOS=linux go build -o inzibat .

  test:
    needs: [ build ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-go@v4
        with:
          go-version: 1.21

      - run: go test -tags=unit -coverprofile=coverage.out -covermode=atomic ./...

      - uses: actions/upload-artifact@v4
        with:
          name: code-coverage
          path: coverage.out

  coverage:
    needs: [ test ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          name: code-coverage

      - uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ github.token }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - uses: sonarsource/sonarqube-quality-gate-action@master
        timeout-minutes: 5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  security-analysis:
    needs: [ coverage ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: securego/gosec@master
        with:
          args: ./...
